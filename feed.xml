<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2017-12-28T01:00:00+01:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Cookandrun - Platform for running dinner events</title>
    <link rel="alternate" href="http://blog.url.com/cookandrun.html"/>
    <id>http://blog.url.com/cookandrun.html</id>
    <published>2017-12-28T01:00:00+01:00</published>
    <updated>2017-12-30T14:29:23+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1&gt;Cookandrun&lt;/h1&gt;

&lt;p&gt;Link to project: &lt;a href="www.cookandrun.fun"&gt;www.cookandrun.fun&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Tech stack&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Backend: Flask (Python)&lt;/li&gt;
&lt;li&gt;Frontend: Vanilla JS + JQuery, SASS (neat/bourbon framework by thoughtbots)&lt;/li&gt;
&lt;li&gt;Database: PostgreSQL&lt;/li&gt;
&lt;li&gt;Deployment: AWS + AWS Services (e.g. E-Mail)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;What is this project about?&lt;/h2&gt;

&lt;p&gt;I built the project because me and my friends wanted to organize a running dinner event but nobody wanted to the organizational work. A running dinner event is an event where you team up with a partner and invite two other teams consisting of strangers to your appartment and cook a delicious meal for them. In exchange two other teams will prepare a meal for your team. At the end all teams come together for a big after party. It&amp;rsquo;s especially popular in student cities. At my university such a running dinner event takes place every semester with more than 3000 students. I wanted to build a platform to help organize such events with minimal effort.&lt;/p&gt;

&lt;h2&gt;Key challenges&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Teams must have an appartment in a certain area to make sure that every team can reach the next appartment in time.&lt;/li&gt;
&lt;li&gt;At every stage teams should come together who haven&amp;rsquo;t met each other before.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;How does it work?&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Organizer signs up at www.cookandrun.fun
&lt;img alt="demo" width="1552" height="909" src="/images/project_cookandrun/01-c3370496.png" /&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Organizer signs in
&lt;img alt="demo" width="1552" height="909" src="/images/project_cookandrun/02-a59ef25c.png" /&gt;&lt;/li&gt;
&lt;li&gt;Organizer creates a new event
&lt;img alt="demo" width="1552" height="909" src="/images/project_cookandrun/03-c61ef967.png" /&gt;&lt;/li&gt;
&lt;li&gt;Organizer specifies more details for the event
&lt;img alt="demo" width="1552" height="909" src="/images/project_cookandrun/04-dee61f7a.png" /&gt;
E.g. specify the area in which the participants need to have an appartment. Participants who don&amp;rsquo;t live in the specified area won&amp;rsquo;t be allowed to sign up for the event
&lt;img alt="demo" width="1552" height="909" src="/images/project_cookandrun/05-2f17c114.png" /&gt;&lt;/li&gt;
&lt;li&gt;Organizer opens the registration phase
&lt;img alt="demo" width="1552" height="909" src="/images/project_cookandrun/06-19461683.png" /&gt;&lt;/li&gt;
&lt;li&gt;Participants can now sign up &lt;specified subdomain&gt;.cookandrun.fun
&lt;img alt="demo" width="1552" height="909" src="/images/project_cookandrun/07-a6d2f48e.png" /&gt;&lt;/li&gt;
&lt;li&gt;Organizer closes the registration phase
&lt;img alt="demo" width="1552" height="909" src="/images/project_cookandrun/08-242b249d.png" /&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Organizer draws the teams 
&lt;img alt="demo" width="1552" height="909" src="/images/project_cookandrun/09-f85a390c.png" /&gt;
The goal is that all teams who share a meal together are as close together as possible. I used K-means algorithm with a fixed cluster size to achieve a near optimal result.
&lt;img alt="demo" width="1552" height="909" src="/images/project_cookandrun/10-04f4a9f3.png" /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Organizer starts event
&lt;img alt="demo" width="1552" height="909" src="/images/project_cookandrun/11-efa43c38.png" /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After the event is started participants get access to their individual time table for the event
&lt;img alt="demo" width="1552" height="909" src="/images/project_cookandrun/12-0e0c445f.png" /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Technical challenges&lt;/h2&gt;

&lt;h3&gt;1. Dynamic subdomains&lt;/h3&gt;

&lt;p&gt;Each event should get its own subdomain for participants to sign up. I split the platform into two seperate applications. The first application serves all requests from cookdandrun.fun. The second application is responsible for all requests from &lt;subdomain&gt;.cookandrun.fun. Both use the flask framework and share the same database.&lt;/p&gt;

&lt;h3&gt;2. Restrict event area&lt;/h3&gt;

&lt;p&gt;The goal was to make it dead easy for an organizer to specify an area in which all participants need to live in order to be allowed to sign up. I use Google Maps for visualization and the Google Maps API to get the coordinates for an address and check whether it&amp;rsquo;s within the specified area or not&lt;/p&gt;

&lt;h3&gt;3. Deployment &amp;amp; mail server&lt;/h3&gt;

&lt;p&gt;Currently the project is deployed on a free tier instance on AWS via four docker containers (2 web apps container, database container and nignx container). As far as the mail server is concerned I couldn&amp;rsquo;t use a normal mail providers (zoho or gmail) because they limit the number of outgoing emails. Eventually I went with the Simple Email Service (SES) from AWS. If you are using AWS to host your application then the first 62.000 emails are free each month. That&amp;rsquo;s more than enough for this project. So the current operating costs are $0.&lt;/p&gt;

&lt;h2&gt;Code&lt;/h2&gt;

&lt;p&gt;You can find the code on github. In order to use it you need to change your configs (mail server, etc).&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Reainforcement Learning notes</title>
    <link rel="alternate" href="http://blog.url.com/rl-notes.html"/>
    <id>http://blog.url.com/rl-notes.html</id>
    <published>2017-12-15T10:10:00+01:00</published>
    <updated>2017-12-29T00:18:59+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1&gt;RL notes&lt;/h1&gt;
</content>
  </entry>
  <entry>
    <title>Kaggle workshop material</title>
    <link rel="alternate" href="http://blog.url.com/kaggle-workshop-material.html"/>
    <id>http://blog.url.com/kaggle-workshop-material.html</id>
    <published>2017-12-15T10:10:00+01:00</published>
    <updated>2017-12-28T23:03:39+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1&gt;Kaggle workshop material&lt;/h1&gt;
</content>
  </entry>
  <entry>
    <title>Chatanalytics - Analysis for whatsapp group chats</title>
    <link rel="alternate" href="http://blog.url.com/chatanalytics.html"/>
    <id>http://blog.url.com/chatanalytics.html</id>
    <published>2017-12-15T01:00:00+01:00</published>
    <updated>2017-12-29T15:04:49+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1&gt;Chatanalytics&lt;/h1&gt;

&lt;p&gt;Link to project: &lt;a href="www.chatanalytics.io]"&gt;www.chatanalytics.io&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Tech stack&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Backend: Flask/Celery (Python)&lt;/li&gt;
&lt;li&gt;Database: PostgreSQL&lt;/li&gt;
&lt;li&gt;Frontend: HTML, SASS (bourbon, neat)&lt;/li&gt;
&lt;li&gt;Testing: Pytest (not full coverage)&lt;/li&gt;
&lt;li&gt;CI/CD: Travis + &lt;a href="https://www.linode.com"&gt;Linode VPS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;What does it do?&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Send a whatsapp group chat protocol to chat(at)chatanalytics.io. &lt;/li&gt;
&lt;li&gt;Get back a link to a result page&lt;/li&gt;
&lt;li&gt;Result page shows five analytics plot about the group chat&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Landing page&lt;br&gt;
&lt;img alt="start" width="1552" height="909" src="/images/project_chatanalytics/01-495809a0.png" /&gt;&lt;/p&gt;

&lt;p&gt;At which day of the week is the chat the most active? 
&lt;img alt="start" width="1552" height="909" src="/images/project_chatanalytics/02-8fab1aaa.png" /&gt;&lt;/p&gt;

&lt;p&gt;At which time of the day is the chat the most active?
&lt;img alt="start" width="1552" height="909" src="/images/project_chatanalytics/03-38cbaf25.png" /&gt;&lt;/p&gt;

&lt;p&gt;In which month of the year is the chat the most active?
&lt;img alt="start" width="1552" height="909" src="/images/project_chatanalytics/04-0650ef75.png" /&gt;&lt;/p&gt;

&lt;p&gt;How active is each group member?
&lt;img alt="start" width="1552" height="909" src="/images/project_chatanalytics/05-ee45330b.png" /&gt;&lt;/p&gt;

&lt;h2&gt;Technical challenges&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Frequently check for new emails -&amp;gt; Celery tasks&lt;/li&gt;
&lt;li&gt;Data analysis -&amp;gt; Pandas and Matplotlib&lt;/li&gt;
&lt;li&gt;Whatsapp uses different formats for different OS and languages&lt;/li&gt;
&lt;li&gt;Deployment -&amp;gt; Travis + Linode VPS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The main parts of the code can be found on my public github profile.&lt;br&gt;
The CI/CD part is private though.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Frankfurt Marathon 2017</title>
    <link rel="alternate" href="http://blog.url.com/frankfurt-marathon.html"/>
    <id>http://blog.url.com/frankfurt-marathon.html</id>
    <published>2017-11-01T10:10:00+01:00</published>
    <updated>2017-12-29T00:09:44+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1&gt;Frankfurt Marathon 2017&lt;/h1&gt;

&lt;p&gt;I&amp;rsquo;ve just finished my first marathon in Frankfurt. Frankfurt is one of the biggest running events in Germany with about 11k runners. The atmosphere during the race was phenomenal due to the 500 000 cheering fans at the course. 
With a finishing time of 3:28h I managed to reach my goal of staying under 3:30h. In the following are some impressions.&lt;/p&gt;

&lt;h3&gt;Number pick up&lt;/h3&gt;

&lt;p&gt;&lt;img alt="number pick up" src="/images/marathon/prep_03-fabd69be.png" /&gt;&lt;/p&gt;

&lt;h3&gt;Notes on my hand&lt;/h3&gt;

&lt;p&gt;When I am really exhausted I sometimes forget how fast I need to run to reach my goal. That&amp;rsquo;s why I wrote it down on my hand.
&lt;img alt="start" src="/images/marathon/hand_notes-b7c6c6a4.jpg" /&gt;&lt;/p&gt;

&lt;h3&gt;During the race&lt;/h3&gt;

&lt;p&gt;&lt;img alt="race" src="/images/marathon/running_01-97c56150.jpeg" /&gt;&lt;br&gt;
I think this was at ~30km. I already look quite tired ;)&lt;/p&gt;

&lt;h3&gt;Finish&lt;/h3&gt;

&lt;p&gt;&lt;img alt="finish" src="/images/marathon/finish_01-6c7a3b90.jpeg" /&gt;&lt;br&gt;
Usually I try to save to energy for the finish.
Next year I want to finish a marathon in under 3:15h.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>PyConDE 2017</title>
    <link rel="alternate" href="http://blog.url.com/pyconde-2017.html"/>
    <id>http://blog.url.com/pyconde-2017.html</id>
    <published>2017-11-01T10:10:00+01:00</published>
    <updated>2017-12-29T00:18:03+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1&gt;PyConDE 2017&lt;/h1&gt;
</content>
  </entry>
</feed>
